///////////////////////////////////////////////////////////////////////////////
// 
// Служебный модуль с реализацией сценария обработки файла <СортировкаСоставаПлановОбмена>
//
///////////////////////////////////////////////////////////////////////////////

// ИмяСценария
//	Возвращает имя сценария обработки файлов
//
// Возвращаемое значение:
//   Строка   - Имя текущего сценария обработки файлов
//
Функция ИмяСценария() Экспорт
	
	Возврат "СортировкаСоставаПлановОбмена";
	
КонецФункции // ИмяСценария()

// ОбработатьФайл
//	Выполняет обработку файла
//
// Параметры:
//  АнализируемыйФайл		- Файл - Файл из журнала git для анализа
//  КаталогИсходныхФайлов  	- Строка - Каталог расположения исходных файлов относительно каталог репозитория
//  ДополнительныеПараметры - Структура - Набор дополнительных параметров, которые можно использовать 
//  	* Лог  					- Объект - Текущий лог
//  	* ИзмененныеКаталоги	- Массив - Каталоги, которые необходимо добавить в индекс
//		* КаталогРепозитория	- Строка - Адрес каталога репозитория
//		* ФайлыДляПостОбработки	- Массив - Файлы, изменившиеся / образовавшиеся в результате работы сценария
//											и которые необходимо дообработать
//
// Возвращаемое значение:
//   Булево - Признак выполненной обработки файла
//
Функция ОбработатьФайл(АнализируемыйФайл, КаталогИсходныхФайлов, ДополнительныеПараметры) Экспорт
	
	Лог = ДополнительныеПараметры.Лог;
	НастройкиСценария = ДополнительныеПараметры.Настройки.Получить(ИмяСценария());
	УчитываяПрефикс = НастройкиСценария.Получить("УчитываяПрефикс");
	
	ФайлОбработан = Ложь;

	Если АнализируемыйФайл.Существует() Тогда
		
		ЭтоПланОбменаЕДТ = ТипыФайлов.ЭтоФайлОписанияПланаОбменаEDT(АнализируемыйФайл);
		Если ЭтоПланОбменаЕДТ Или ТипыФайлов.ЭтоФайлОписанияПланаОбмена(АнализируемыйФайл) Тогда
		
			Лог.Информация("Обработка файла '%1' по сценарию '%2'", АнализируемыйФайл.ПолноеИмя, ИмяСценария());

			ФайлОбработан = ОтсортироватьПланОбмена(АнализируемыйФайл.ПолноеИмя, ЭтоПланОбменаЕДТ, УчитываяПрефикс);
			
			Если ФайлОбработан Тогда
				ДополнительныеПараметры.ИзмененныеКаталоги.Добавить(АнализируемыйФайл.ПолноеИмя);
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ФайлОбработан;
	
КонецФункции // ОбработатьФайл()

Функция ОтсортироватьПланОбмена(Знач ИмяФайла, ЭтоЕДТ, УчитываяПрефикс)

	СодержимоеФайла = ФайловыеОперации.ПрочитатьТекстФайла(ИмяФайла);

	Если ЭтоЕДТ Тогда
		ИмяТега              = "content";
		РазделительЭлементов = Символы.ПС + "  ";
		ШаблонПоискаТегов    = "<content>[\w\W]*?<mdObject>([\w\W]*?)<\/mdObject>[\w\W]*?<\/content>";
	Иначе
		ИмяТега              = "Item";
		РазделительЭлементов = Символы.ПС + "	";
		ШаблонПоискаТегов    = "<Item>[\w\W]*?<Metadata>([\w\W]*?)<\/Metadata>[\w\W]*?<\/Item>";
	КонецЕсли;
	ВыполненаСортировка = РегулярныеВыражения.СортироватьМассивТеговСостава(
		СодержимоеФайла, ИмяТега, РазделительЭлементов, УчитываяПрефикс, ШаблонПоискаТегов);

	Если ВыполненаСортировка Тогда
		ФайловыеОперации.ЗаписатьТекстФайла(ИмяФайла, СодержимоеФайла);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
